{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\pages\\\\Stats.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport IdProject from \"../IdProject.json\"; // 스마트 계약 ABI 파일\nimport \"../css/stats.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // 배포된 스마트 계약 주소 입력\n\nexport function Stats() {\n  _s();\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [totalBlocks, setTotalBlocks] = useState(0);\n  const [recentUsers, setRecentUsers] = useState([]);\n  const [currentUserIndex, setCurrentUserIndex] = useState(0); // 현재 유저 인덱스를 추적\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        if (!window.ethereum) {\n          console.error(\"MetaMask not detected\");\n          return;\n        }\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = IdProject.networks[networkId];\n        const contract = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n\n        // 스마트 계약에서 데이터 가져오기\n        const userCount = await contract.methods.getTotalUserCount().call();\n        const blockCount = await contract.methods.getTotalBlockCount().call();\n        const recentUserList = await contract.methods.getRecentUser().call();\n        setTotalUsers(userCount);\n        setTotalBlocks(blockCount);\n        setRecentUsers(recentUserList);\n      } catch (error) {\n        console.error(\"Error fetching stats:\", error);\n      }\n    };\n    fetchStats();\n  }, []);\n\n  // 유저명을 순차적으로 변경하는 함수\n  useEffect(() => {\n    if (recentUsers.length === 0) return; // 유저가 없으면 종료\n\n    const intervalId = setInterval(() => {\n      setCurrentUserIndex(prevIndex => (prevIndex + 1) % recentUsers.length); // 유저 인덱스를 순차적으로 증가\n    }, 1000); // 3초마다 유저명 변경\n\n    // 컴포넌트 언마운트 시 interval 정리\n    return () => clearInterval(intervalId);\n  }, [recentUsers]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"total-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"stats-title\",\n            children: \"\\uCD1D \\uB204\\uC801 \\uC720\\uC800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"total-ctn\",\n            children: totalUsers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"stats-title\",\n            children: \"\\uCD1D \\uB204\\uC801 \\uBE14\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"total-ctn\",\n            children: totalBlocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uCD5C\\uADFC \\uD65C\\uB3D9 \\uC720\\uC800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-list\",\n        children: recentUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"marquee\", {\n          behavior: \"scroll\",\n          direction: \"up\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: recentUsers[currentUserIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }, this) : \"데이터 없음\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Stats, \"aDfNJSQYkXCb4eSSWsXcQvhPkkk=\");\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["useEffect","useState","Web3","IdProject","jsxDEV","_jsxDEV","Fragment","_Fragment","contractAddress","Stats","_s","totalUsers","setTotalUsers","totalBlocks","setTotalBlocks","recentUsers","setRecentUsers","currentUserIndex","setCurrentUserIndex","fetchStats","window","ethereum","console","error","web3","request","method","networkId","eth","net","getId","deployedNetwork","networks","contract","Contract","abi","address","userCount","methods","getTotalUserCount","call","blockCount","getTotalBlockCount","recentUserList","getRecentUser","length","intervalId","setInterval","prevIndex","clearInterval","children","className","fileName","_jsxFileName","lineNumber","columnNumber","behavior","direction","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/pages/Stats.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport IdProject from \"../IdProject.json\"; // 스마트 계약 ABI 파일\r\nimport \"../css/stats.css\";\r\n\r\nconst contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // 배포된 스마트 계약 주소 입력\r\n\r\nexport function Stats() {\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [totalBlocks, setTotalBlocks] = useState(0);\r\n  const [recentUsers, setRecentUsers] = useState([]);\r\n  const [currentUserIndex, setCurrentUserIndex] = useState(0); // 현재 유저 인덱스를 추적\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      try {\r\n        if (!window.ethereum) {\r\n          console.error(\"MetaMask not detected\");\r\n          return;\r\n        }\r\n\r\n        const web3 = new Web3(window.ethereum);\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        const networkId = await web3.eth.net.getId();\r\n        const deployedNetwork = IdProject.networks[networkId];\r\n        const contract = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\r\n\r\n        // 스마트 계약에서 데이터 가져오기\r\n        const userCount = await contract.methods.getTotalUserCount().call();\r\n        const blockCount = await contract.methods.getTotalBlockCount().call();\r\n        const recentUserList = await contract.methods.getRecentUser().call();\r\n\r\n        setTotalUsers(userCount);\r\n        setTotalBlocks(blockCount);\r\n        setRecentUsers(recentUserList);\r\n      } catch (error) {\r\n        console.error(\"Error fetching stats:\", error);\r\n      }\r\n    };\r\n\r\n    fetchStats();\r\n  }, []);\r\n\r\n  // 유저명을 순차적으로 변경하는 함수\r\n  useEffect(() => {\r\n    if (recentUsers.length === 0) return; // 유저가 없으면 종료\r\n\r\n    const intervalId = setInterval(() => {\r\n      setCurrentUserIndex((prevIndex) => (prevIndex + 1) % recentUsers.length); // 유저 인덱스를 순차적으로 증가\r\n    }, 1000); // 3초마다 유저명 변경\r\n\r\n    // 컴포넌트 언마운트 시 interval 정리\r\n    return () => clearInterval(intervalId);\r\n  }, [recentUsers]);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"total-table\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"stats-title\">총 누적 유저</td>\r\n            <td className=\"total-ctn\">{totalUsers}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"stats-title\">총 누적 블록</td>\r\n            <td className=\"total-ctn\">{totalBlocks}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className=\"list-form\">\r\n        <p>최근 활동 유저</p>\r\n        <div className=\"stats-list\">\r\n          {recentUsers.length > 0 ? (\r\n             <marquee   behavior=\"scroll\" direction=\"up\">\r\n             <div>{recentUsers[currentUserIndex]}</div>\r\n           \r\n           </marquee>\r\n\r\n            \r\n          ) : (\r\n            \"데이터 없음\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}