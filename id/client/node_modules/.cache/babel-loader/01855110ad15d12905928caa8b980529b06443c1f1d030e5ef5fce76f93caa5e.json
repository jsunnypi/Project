{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\nimport Stats from \"./pages/Stats\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자\n  const [searchedBlock, setSearchedBlocks] = useState([]); // 검색된 블록\n  const [nickName, setNickName] = useState(\"\");\n  const [userTokenBalance, setUserTokenBalance] = useState(0); // 유저의 토큰 잔액 상태 관리\n\n  // 메타마스크 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            console.log(networkId);\n            const deployedNetwork = IdProject.networks[networkId];\n            console.log(deployedNetwork.address);\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n            fetchBlocks(instance, account); // 계약에서 직접 데이터 불러오기\n            fetchTokenBalance(instance, account); // 사용자 잔액 불러오기\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\"MetaMask와의 연결에 문제가 발생했습니다. MetaMask가 설치되어 있고, 계정이 연결되었는지 확인해 주세요.\");\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. MetaMask를 설치해 주세요.\");\n      }\n    };\n    initWeb3();\n\n    // 새로고침 시 로컬 스토리지에서 blocks 데이터 불러오기\n    const savedBlocks = localStorage.getItem(\"blocks\");\n    if (savedBlocks) {\n      setBlocks(JSON.parse(savedBlocks));\n    }\n  }, []);\n\n  // blocks 상태 업데이트 시 로컬 스토리지에 저장\n  useEffect(() => {\n    if (blocks.length > 0) {\n      localStorage.setItem(\"blocks\", JSON.stringify(blocks));\n    }\n  }, [blocks]);\n\n  // 블록 정보 가져오기 (스마트 계약에서 실시간으로 블록 데이터 불러오기)\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        // blockCount는 BigInt로 반환될 수 있으므로, 이를 BigInt로 처리합니다.\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          // blockCount가 BigInt이므로 비교할 때도 BigInt로 비교\n          console.log(\"No blocks available.\");\n          return;\n        }\n        const fetchedBlockResults = [];\n\n        // i는 BigInt로 처리합니다. (1n은 BigInt 값)\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          console.log(`Block ${i}:`, block);\n          fetchedBlockResults.push({\n            // blockId: blockCount[i].toString(), // BigInt를 string으로 변환하여 저장\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString() // 타임스탬프 변환\n          });\n          if (i + 1 === blockCount.length) setNickName(block[0]);\n        }\n        setBlocks(fetchedBlockResults.reverse()); // 블록 상태 업데이트\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 사용자의 토큰 잔액 가져오기\n  const fetchTokenBalance = async (contract, account) => {\n    try {\n      if (contract && account) {\n        const balance = await contract.methods.getTokenBalance(account).call();\n        setUserTokenBalance(balance);\n      }\n    } catch (error) {\n      console.error(\"사용자 토큰 잔액 조회 중 오류 발생:\", error);\n    }\n  };\n\n  // 선택된 사용자 상태 업데이트\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    fetchSearchedBlocks(user.userAddress);\n  };\n\n  // 사용자가 선택한 블록 정보 가져오기\n  const fetchSearchedBlocks = async account => {\n    try {\n      if (contract && account) {\n        // blockCount는 BigInt로 반환될 수 있으므로, 이를 BigInt로 처리합니다.\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          // blockCount가 BigInt이므로 비교할 때도 BigInt로 비교\n          console.log(\"No blocks available.\");\n          return;\n        }\n        const fetchedBlockResults = [];\n\n        // i는 BigInt로 처리합니다. (1n은 BigInt 값)\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          console.log(`Block ${i}:`, block);\n          fetchedBlockResults.push({\n            // blockId: blockCount[i].toString(), // BigInt를 string으로 변환하여 저장\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString() // 타임스탬프 변환\n          });\n        }\n        setSearchedBlocks(fetchedBlockResults.reverse()); // 블록 상태 업데이트\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 최근 유저 \n  const recentUserSelect = (address, nickName) => {\n    setSelectedUser({\n      address,\n      nickName\n    });\n    fetchSearchedBlocks(address);\n  };\n\n  // 사용자 선택 취소 (검색 화면으로 돌아가기)\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n\n  // 채굴 버튼 클릭 시 사용자에게 토큰 전달\n  const handleMine = async () => {\n    if (contract && account) {\n      try {\n        // 발행자가 토큰을 사용자에게 지급하는 mint 함수 호출\n        const gasPrice = Web3.utils.toWei(\"20\", \"gwei\");\n        await contract.methods.mine(account, Web3.utils.toWei(\"1\", \"ether\")).send({\n          from: account,\n          gas: 5000000,\n          gasPrice\n        });\n        alert(\"1 WID 토큰이 사용자에게 전달되었습니다.\");\n        // 토큰 잔액 새로고침\n        fetchTokenBalance(contract, account);\n      } catch (error) {\n        console.error(\"토큰 채굴 중 오류 발생:\", error);\n        alert(\"토큰 채굴에 실패했습니다.\");\n      }\n    } else {\n      alert(\"계정을 연결할 수 없습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        margin: 0,\n        padding: 0,\n        marginBottom: \"15px\",\n        marginTop: \"15px\"\n      },\n      children: [\" \", \"Welcome, \", nickName, \"!\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mining-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mining-button\",\n        onClick: handleMine,\n        style: {\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\"\n        },\n        children: \"\\uCC44\\uAD74\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBCF4\\uC720\\uD55C \\uD1A0\\uD070: \", userTokenBalance, \" WID\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), !selectedUser ?\n    /*#__PURE__*/\n    // 검색 화면\n    _jsxDEV(Search, {\n      contract: contract,\n      onUserSelect: handleUserSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // 선택된 사용자 히스토리 화면\n    _jsxDEV(\"div\", {\n      className: \"user-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedUser.nickName, \"\\uB2D8\\uC758 \\uAE30\\uB85D \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToSearch,\n          className: \"back-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        blocks: searchedBlock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }, this), !selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateBlock, {\n        contract: contract,\n        account: account,\n        blocks: blocks,\n        setBlocks: setBlocks,\n        fetchBlocks: fetchBlocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        blocks: blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(Stats, {\n        onSelectUser: recentUserSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBTN, {\n        nickName: nickName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HelpBTN, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mining-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mining-button\",\n          onClick: handleMine,\n          style: {\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"20px\"\n          },\n          children: \"\\uCC44\\uAD74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBCF4\\uC720\\uD55C \\uD1A0\\uD070: \", userTokenBalance, \" WID\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"F/K3UoP5BTvVcPtVB6xElmoMfAQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Header","Footer","History","ChatBTN","HelpBTN","Search","IdProject","CreateBlock","Stats","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","contract","setContract","blocks","setBlocks","selectedUser","setSelectedUser","searchedBlock","setSearchedBlocks","nickName","setNickName","userTokenBalance","setUserTokenBalance","initWeb3","window","ethereum","web3","request","method","accounts","eth","getAccounts","length","networkId","net","getId","console","log","deployedNetwork","networks","address","instance","Contract","abi","fetchBlocks","fetchTokenBalance","error","alert","savedBlocks","localStorage","getItem","JSON","parse","setItem","stringify","blockCount","methods","getIndexOf","call","fetchedBlockResults","i","block","getInfo","push","gameName","serverName","className","remarks","date","Date","Number","toLocaleString","reverse","balance","getTokenBalance","handleUserSelect","user","fetchSearchedBlocks","userAddress","recentUserSelect","handleBackToSearch","handleMine","gasPrice","utils","toWei","mine","send","from","gas","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","margin","padding","marginBottom","marginTop","onClick","position","top","left","onUserSelect","onSelectUser","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\nimport Stats from \"./pages/Stats\";\n\nconst App = () => {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자\n  const [searchedBlock, setSearchedBlocks] = useState([]); // 검색된 블록\n  const [nickName, setNickName] = useState(\"\");\n  const [userTokenBalance, setUserTokenBalance] = useState(0); // 유저의 토큰 잔액 상태 관리\n\n  // 메타마스크 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            console.log(networkId);\n            const deployedNetwork = IdProject.networks[networkId];\n            console.log(deployedNetwork.address);\n            const instance = new web3.eth.Contract(\n              IdProject.abi,\n              deployedNetwork.address\n            );\n\n            setContract(instance);\n\n            fetchBlocks(instance, account); // 계약에서 직접 데이터 불러오기\n            fetchTokenBalance(instance, account); // 사용자 잔액 불러오기\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\n            \"MetaMask와의 연결에 문제가 발생했습니다. MetaMask가 설치되어 있고, 계정이 연결되었는지 확인해 주세요.\"\n          );\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. MetaMask를 설치해 주세요.\");\n      }\n    };\n    initWeb3();\n    \n    // 새로고침 시 로컬 스토리지에서 blocks 데이터 불러오기\n    const savedBlocks = localStorage.getItem(\"blocks\");\n    if (savedBlocks) {\n      setBlocks(JSON.parse(savedBlocks));\n    }\n  }, []);\n\n  // blocks 상태 업데이트 시 로컬 스토리지에 저장\n  useEffect(() => {\n    if (blocks.length > 0) {\n      localStorage.setItem(\"blocks\", JSON.stringify(blocks));\n    }\n  }, [blocks]);\n\n  // 블록 정보 가져오기 (스마트 계약에서 실시간으로 블록 데이터 불러오기)\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        // blockCount는 BigInt로 반환될 수 있으므로, 이를 BigInt로 처리합니다.\n        const blockCount = await contract.methods.getIndexOf(account).call();\n\n        if (blockCount.length === 0n) {\n          // blockCount가 BigInt이므로 비교할 때도 BigInt로 비교\n          console.log(\"No blocks available.\");\n          return;\n        }\n\n        const fetchedBlockResults = [];\n\n        // i는 BigInt로 처리합니다. (1n은 BigInt 값)\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods\n            .getInfo(account, blockCount[i])\n            .call();\n          console.log(`Block ${i}:`, block);\n\n          fetchedBlockResults.push({\n            // blockId: blockCount[i].toString(), // BigInt를 string으로 변환하여 저장\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString(), // 타임스탬프 변환\n          });\n          if (i + 1 === blockCount.length) setNickName(block[0]);\n        }\n\n        setBlocks(fetchedBlockResults.reverse()); // 블록 상태 업데이트\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 사용자의 토큰 잔액 가져오기\n  const fetchTokenBalance = async (contract, account) => {\n    try {\n      if (contract && account) {\n        const balance = await contract.methods.getTokenBalance(account).call();\n        setUserTokenBalance(balance);\n      }\n    } catch (error) {\n      console.error(\"사용자 토큰 잔액 조회 중 오류 발생:\", error);\n    }\n  };\n\n  // 선택된 사용자 상태 업데이트\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n    fetchSearchedBlocks(user.userAddress);\n  };\n  \n\n  // 사용자가 선택한 블록 정보 가져오기\n  const fetchSearchedBlocks = async (account) => {\n    try {\n      if (contract && account) {\n        // blockCount는 BigInt로 반환될 수 있으므로, 이를 BigInt로 처리합니다.\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          // blockCount가 BigInt이므로 비교할 때도 BigInt로 비교\n          console.log(\"No blocks available.\");\n          return;\n        }\n\n        const fetchedBlockResults = [];\n\n        // i는 BigInt로 처리합니다. (1n은 BigInt 값)\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods\n            .getInfo(account, blockCount[i])\n            .call();\n          console.log(`Block ${i}:`, block);\n\n          fetchedBlockResults.push({\n            // blockId: blockCount[i].toString(), // BigInt를 string으로 변환하여 저장\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString(), // 타임스탬프 변환\n          });\n        }\n\n        setSearchedBlocks(fetchedBlockResults.reverse()); // 블록 상태 업데이트\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 최근 유저 \n  const recentUserSelect = (address, nickName) => {\n    setSelectedUser({ address, nickName });\n    fetchSearchedBlocks(address);\n  };\n  \n\n  // 사용자 선택 취소 (검색 화면으로 돌아가기)\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n\n  // 채굴 버튼 클릭 시 사용자에게 토큰 전달\n    const handleMine = async () => {\n      if (contract && account) {\n        try {\n          // 발행자가 토큰을 사용자에게 지급하는 mint 함수 호출\n          const gasPrice = Web3.utils.toWei(\"20\", \"gwei\");\n          await contract.methods\n            .mine(account, Web3.utils.toWei(\"1\", \"ether\"))\n            .send({ from: account, gas: 5000000, gasPrice });\n          alert(\"1 WID 토큰이 사용자에게 전달되었습니다.\");\n          // 토큰 잔액 새로고침\n          fetchTokenBalance(contract, account);\n        } catch (error) {\n          console.error(\"토큰 채굴 중 오류 발생:\", error);\n          alert(\"토큰 채굴에 실패했습니다.\");\n        }\n      } else {\n        alert(\"계정을 연결할 수 없습니다.\");\n      }\n    };\n\n  return (\n    <div className=\"main-container\">\n      <Header />\n      <h1\n        style={{\n          textAlign: \"center\",\n          margin: 0,\n          padding: 0,\n          marginBottom: \"15px\",\n          marginTop: \"15px\",\n        }}\n      >\n        {\" \"}\n        Welcome, {nickName}!{\" \"}\n      </h1>\n      {/* 채굴 버튼 및 사용자 토큰 잔액 */}\n      <div className=\"mining-section\">\n          <button\n            className=\"mining-button\"\n            onClick={handleMine}\n            style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n          >\n            채굴\n          </button>\n          <p>보유한 토큰: {userTokenBalance} WID</p>\n        </div>\n      {!selectedUser ? (\n        // 검색 화면\n        <Search contract={contract} onUserSelect={handleUserSelect} />\n      ) : (\n        // 선택된 사용자 히스토리 화면\n        <div className=\"user-history\">\n          <h2>{selectedUser.nickName}님의 기록 <button onClick={handleBackToSearch} className=\"back-button\"></button></h2>\n          <History blocks={searchedBlock} />\n        </div>\n      )}\n      {!selectedUser && (\n        <>\n          {/* 블록 생성 및 전체 블록 히스토리 */}\n          <CreateBlock\n            contract={contract}\n            account={account}\n            blocks={blocks}\n            setBlocks={setBlocks}\n            fetchBlocks={fetchBlocks}\n          />\n          <History blocks={blocks} />\n        </>\n      )}\n      <Footer />\n      <div className=\"button-container\">\n        \n        <Stats onSelectUser={recentUserSelect} />\n          \n        <ChatBTN nickName={nickName} />\n        <HelpBTN />\n        {/* 채굴 버튼 및 사용자 토큰 잔액 */}\n        <div className=\"mining-section\">\n          <button\n            className=\"mining-button\"\n            onClick={handleMine}\n            style={{ position: \"absolute\", top: \"20px\", left: \"20px\" }}\n          >\n            채굴\n          </button>\n          <p>보유한 토큰: {userTokenBalance} WID</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}