{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\nimport \"../css/search.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Search({\n  contract,\n  onUserSelect\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\"); // 사용자가 입력한 검색어를 저장하는 상태\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과를 저장하는 상태\n  const [isSearched, setIsSearched] = useState(false); // 검색 버튼을 클릭했는지 여부를 저장하는 상태\n\n  // 검색 버튼 클릭 시 호출되는 함수\n  const handleSearch = async () => {\n    setIsSearched(true); // 검색 버튼 클릭 표시\n    const normalizedSearchTerm = searchTerm.trim().toLowerCase();\n\n    // 입력 값이 없거나 공백인 경우 처리\n    if (!normalizedSearchTerm) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      // 스마트 컨트랙트에서 모든 검색 결과를 가져오기\n      const searchResult = await contract.methods.linearSearch(normalizedSearchTerm).call();\n      const searchUsers = searchResult[0]; // 검색된 닉네임 배열\n      const searchUserAddresses = searchResult[1]; // 검색된 사용자 주소 배열\n\n      if (!searchUsers || searchUsers.length === 0) {\n        setSearchResults([]);\n        return;\n      }\n\n      // 검색 결과 처리\n      const results = searchUsers.map((user, index) => ({\n        nickName: user,\n        userAddress: searchUserAddresses[index],\n        gameName: normalizedSearchTerm // 검색된 게임 이름\n      }));\n      setSearchResults(results); // 검색 결과 저장\n    } catch (error) {\n      console.error(\"검색 중 오류 발생:\", error.message, error.stack);\n      setSearchResults([]); // 오류 발생 시 결과를 빈 배열로 처리\n    }\n  };\n\n  // 엔터키 입력 처리\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          className: \"search-bar\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value) // 입력 값 변경 시 상태 업데이트\n          ,\n          onKeyDown: handleKeyDown // 엔터키 감지\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-search\",\n          onClick: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), isSearched && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uB2C9\\uB124\\uC784:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => onUserSelect(result),\n                style: {\n                  textDecoration: \"underline\",\n                  color: \"blue\",\n                  cursor: \"pointer\"\n                },\n                children: result.nickName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uC0AC\\uC6A9\\uC790 \\uC8FC\\uC18C: \", result.userAddress]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)]\n          }, result.userAddress, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"'\", searchTerm, \"' \\uD0A4\\uC6CC\\uB4DC \\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"PM9UW3C8DmOLgguxKtrsrMqfdDI=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","contract","onUserSelect","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearched","setIsSearched","handleSearch","normalizedSearchTerm","trim","toLowerCase","searchResult","methods","linearSearch","call","searchUsers","searchUserAddresses","length","results","map","user","index","nickName","userAddress","gameName","error","console","message","stack","handleKeyDown","e","key","children","className","type","placeholder","value","onChange","target","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","result","style","textDecoration","color","cursor","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/pages/Search.js"],"sourcesContent":["import \"../css/search.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport function Search({ contract, onUserSelect }) {\r\n  const [searchTerm, setSearchTerm] = useState(\"\"); // 사용자가 입력한 검색어를 저장하는 상태\r\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과를 저장하는 상태\r\n  const [isSearched, setIsSearched] = useState(false); // 검색 버튼을 클릭했는지 여부를 저장하는 상태\r\n\r\n  // 검색 버튼 클릭 시 호출되는 함수\r\n  const handleSearch = async () => {\r\n    setIsSearched(true); // 검색 버튼 클릭 표시\r\n    const normalizedSearchTerm = searchTerm.trim().toLowerCase();\r\n\r\n    // 입력 값이 없거나 공백인 경우 처리\r\n    if (!normalizedSearchTerm) {\r\n      setSearchResults([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 스마트 컨트랙트에서 모든 검색 결과를 가져오기\r\n      const searchResult = await contract.methods\r\n        .linearSearch(normalizedSearchTerm)\r\n        .call();\r\n      const searchUsers = searchResult[0]; // 검색된 닉네임 배열\r\n      const searchUserAddresses = searchResult[1]; // 검색된 사용자 주소 배열\r\n\r\n      if (!searchUsers || searchUsers.length === 0) {\r\n        setSearchResults([]);\r\n        return;\r\n      }\r\n\r\n      // 검색 결과 처리\r\n      const results = searchUsers.map((user, index) => ({\r\n        nickName: user,\r\n        userAddress: searchUserAddresses[index],\r\n        gameName: normalizedSearchTerm, // 검색된 게임 이름\r\n      }));\r\n\r\n      setSearchResults(results); // 검색 결과 저장\r\n    } catch (error) {\r\n      console.error(\"검색 중 오류 발생:\", error.message, error.stack);\r\n      setSearchResults([]); // 오류 발생 시 결과를 빈 배열로 처리\r\n    }\r\n  };\r\n\r\n  // 엔터키 입력 처리\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-container-search\">\r\n        <div className=\"input-button-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"검색어를 입력하세요\"\r\n            className=\"search-bar\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)} // 입력 값 변경 시 상태 업데이트\r\n            onKeyDown={handleKeyDown} // 엔터키 감지\r\n          />\r\n          <button className=\"btn-search\" onClick={handleSearch}></button>\r\n        </div>\r\n\r\n        {/* 검색 결과 출력 */}\r\n        {isSearched && (\r\n          <>\r\n            {searchResults.length > 0 ? (\r\n              <ul>\r\n                {searchResults.map((result) => (\r\n                  <li key={result.userAddress}>\r\n                    <p>\r\n                      닉네임:{\" \"}\r\n                      <span\r\n                        onClick={() => onUserSelect(result)}\r\n                        style={{\r\n                          textDecoration: \"underline\",\r\n                          color: \"blue\",\r\n                          cursor: \"pointer\",\r\n                        }}\r\n                      >\r\n                        {result.nickName}\r\n                      </span>\r\n                    </p>\r\n                    <p>사용자 주소: {result.userAddress}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>'{searchTerm}' 키워드 검색 결과가 없습니다.</p>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}