{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\pages\\\\Search.js\",\n  _s = $RefreshSig$();\nimport \"../css/search.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Search({\n  contract,\n  onUserSelect\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\"); // 사용자가 입력한 검색어를 저장하는 상태\n  const [searchResults, setSearchResults] = useState([]); // 검색 결과를 저장하는 상태\n  const [isSearched, setIsSearched] = useState(false); // 검색 버튼을 클릭했는지 여부를 저장하는 상태\n\n  // 검색 버튼 클릭 시 호출되는 함수\n  const handleSearch = async () => {\n    setIsSearched(true); // 검색 버튼 클릭 표시\n    const normalizedSearchTerm = searchTerm.trim().toLowerCase();\n\n    // 입력 값이 없거나 공백인 경우 처리\n    if (!normalizedSearchTerm) {\n      setSearchResults([]);\n      return;\n    }\n    try {\n      // 스마트 컨트랙트에서 모든 검색 결과를 가져오기\n      const searchResult = await contract.methods.linearSearch(normalizedSearchTerm).call();\n      const searchUsers = searchResult[0]; // 검색된 닉네임 배열\n      const searchUserAddresses = searchResult[1]; // 검색된 사용자 주소 배열\n\n      if (!searchUsers || searchUsers.length === 0) {\n        setSearchResults([]);\n        return;\n      }\n\n      // 검색 결과 처리\n      const results = [];\n      for (let i = 0; i < searchUsers.length; i++) {\n        const address = searchUserAddresses[i];\n        const blocks = await contract.methods.getIndexOf(address).call();\n\n        // 최신 블록의 닉네임 가져오기\n        let latestBlockId = blocks[blocks.length - 1]; // 가장 최근 블록의 ID를 가져옴\n        const latestNickName = await contract.methods.getInfo(address, latestBlockId).call();\n        results.push({\n          nickName: latestNickName[0],\n          // 최신 닉네임\n          userAddress: address,\n          gameName: normalizedSearchTerm // 검색된 게임 이름\n        });\n      }\n      setSearchResults(results); // 검색 결과 저장\n    } catch (error) {\n      console.error(\"검색 중 오류 발생:\", error.message, error.stack);\n      setSearchResults([]); // 오류 발생 시 결과를 빈 배열로 처리\n    }\n  };\n\n  // 엔터키 입력 처리\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          className: \"search-bar\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value) // 입력 값 변경 시 상태 업데이트\n          ,\n          onKeyDown: handleKeyDown // 엔터키 감지\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-search\",\n          onClick: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), isSearched && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\uB2C9\\uB124\\uC784:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => {\n                  console.log(\"선택된 사용자:\", result); // 로그 추가\n                  onUserSelect(result);\n                },\n                children: result.nickName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 24\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 20\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\uC0AC\\uC6A9\\uC790 \\uC8FC\\uC18C: \", result.userAddress.slice(-4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 28\n            }, this)]\n          }, result.userAddress, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 18\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"'\", searchTerm, \"' \\uD0A4\\uC6CC\\uB4DC \\uAC80\\uC0C9 \\uACB0\\uACFC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 14\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"PM9UW3C8DmOLgguxKtrsrMqfdDI=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","contract","onUserSelect","_s","searchTerm","setSearchTerm","searchResults","setSearchResults","isSearched","setIsSearched","handleSearch","normalizedSearchTerm","trim","toLowerCase","searchResult","methods","linearSearch","call","searchUsers","searchUserAddresses","length","results","i","address","blocks","getIndexOf","latestBlockId","latestNickName","getInfo","push","nickName","userAddress","gameName","error","console","message","stack","handleKeyDown","e","key","children","className","type","placeholder","value","onChange","target","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","result","log","slice","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/pages/Search.js"],"sourcesContent":["import \"../css/search.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport function Search({ contract, onUserSelect }) {\r\n  \r\n  const [searchTerm, setSearchTerm] = useState(\"\");        // 사용자가 입력한 검색어를 저장하는 상태\r\n  const [searchResults, setSearchResults] = useState([]);  // 검색 결과를 저장하는 상태\r\n  const [isSearched, setIsSearched] = useState(false);     // 검색 버튼을 클릭했는지 여부를 저장하는 상태\r\n\r\n  // 검색 버튼 클릭 시 호출되는 함수\r\n  const handleSearch = async () => {\r\n    setIsSearched(true);  // 검색 버튼 클릭 표시\r\n    const normalizedSearchTerm = searchTerm.trim().toLowerCase();\r\n\r\n    // 입력 값이 없거나 공백인 경우 처리\r\n    if (!normalizedSearchTerm) {\r\n      setSearchResults([]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 스마트 컨트랙트에서 모든 검색 결과를 가져오기\r\n      const searchResult = await contract.methods.linearSearch(normalizedSearchTerm).call();\r\n      const searchUsers = searchResult[0]; // 검색된 닉네임 배열\r\n      const searchUserAddresses = searchResult[1]; // 검색된 사용자 주소 배열\r\n  \r\n      if (!searchUsers || searchUsers.length === 0) {\r\n        setSearchResults([]);\r\n        return;\r\n      }\r\n\r\n      // 검색 결과 처리\r\n      const results = [];\r\n      for (let i = 0; i < searchUsers.length; i++) {\r\n        const address = searchUserAddresses[i];\r\n        const blocks = await contract.methods.getIndexOf(address).call();\r\n\r\n        // 최신 블록의 닉네임 가져오기\r\n        let latestBlockId = blocks[blocks.length - 1];  // 가장 최근 블록의 ID를 가져옴\r\n        const latestNickName = await contract.methods.getInfo(address, latestBlockId).call();\r\n\r\n        results.push({\r\n          nickName: latestNickName[0], // 최신 닉네임\r\n          userAddress: address,\r\n          gameName: normalizedSearchTerm, // 검색된 게임 이름\r\n        });\r\n      }\r\n\r\n      setSearchResults(results); // 검색 결과 저장\r\n    } catch (error) {\r\n      console.error(\"검색 중 오류 발생:\", error.message, error.stack);\r\n      setSearchResults([]); // 오류 발생 시 결과를 빈 배열로 처리\r\n    }\r\n  };\r\n\r\n  // 엔터키 입력 처리\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"main-container-search\">\r\n        <div className=\"input-button-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"검색어를 입력하세요\"\r\n            className=\"search-bar\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}  // 입력 값 변경 시 상태 업데이트\r\n            onKeyDown={handleKeyDown}  // 엔터키 감지\r\n          />\r\n          <button className=\"btn-search\" onClick={handleSearch}></button>\r\n        </div>\r\n\r\n        {/* 검색 결과 출력 */}\r\n        {isSearched && (\r\n           <>\r\n           {searchResults.length > 0 ? (\r\n             <table>\r\n               {searchResults.map((result) => (\r\n                 <tr key={result.userAddress}>\r\n                   <td>\r\n                     닉네임:{\" \"}\r\n                     \r\n                       <span onClick={() => {\r\n                         console.log(\"선택된 사용자:\", result);  // 로그 추가\r\n                         onUserSelect(result);\r\n                       }}>\r\n                     {result.nickName}</span>\r\n                     </td> <td >사용자 주소: {result.userAddress.slice(-4)}</td>\r\n                 </tr>\r\n               ))}\r\n             </table>\r\n           ) : (\r\n             <p>'{searchTerm}' 키워드 검색 결과가 없습니다.</p>\r\n           )}\r\n         </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}