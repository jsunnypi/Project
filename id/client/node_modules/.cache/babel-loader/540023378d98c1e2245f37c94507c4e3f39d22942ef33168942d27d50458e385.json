{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\nimport Stats from \"./pages/Stats\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자 (닉네임, 주소 포함)\n  const [searchedBlock, setSearchedBlocks] = useState([]); // 검색된 블록 상태\n  const [nickName, setNickName] = useState(\"\");\n\n  // 🔹 MetaMask 연결 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n\n            // ✅ 계정의 블록 데이터를 가져옴\n            fetchBlocks(instance, account);\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\"MetaMask와의 연결에 문제가 발생했습니다. 확인해 주세요.\");\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. MetaMask를 설치해 주세요.\");\n      }\n    };\n    initWeb3();\n\n    // 🔹 새로고침 시 로컬 스토리지에서 블록 데이터 불러오기\n    const savedBlocks = localStorage.getItem(\"blocks\");\n    if (savedBlocks) {\n      setBlocks(JSON.parse(savedBlocks));\n    }\n  }, []);\n\n  // 🔹 blocks 상태 변경 시 로컬 스토리지에 저장\n  useEffect(() => {\n    if (blocks.length > 0) {\n      localStorage.setItem(\"blocks\", JSON.stringify(blocks));\n    }\n  }, [blocks]);\n\n  // 🔹 스마트 계약에서 블록 정보 가져오기\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n        const fetchedBlockResults = [];\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString()\n          });\n          if (i + 1 === blockCount.length) setNickName(block[0]);\n        }\n        setBlocks(fetchedBlockResults.reverse());\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // ✅ 유저 선택 시 실행 (Stats에서 클릭하면 실행됨)\n  const handleUserSelect = (userAddress, userNickName) => {\n    setSelectedUser({\n      userAddress,\n      userNickName\n    });\n    fetchSearchedBlocks(userAddress);\n  };\n\n  // 🔹 특정 유저의 블록 검색 (닉네임 기반)\n  const fetchSearchedBlocks = async account => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n        const fetchedBlockResults = [];\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString()\n          });\n        }\n        setSearchedBlocks(fetchedBlockResults.reverse());\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 🔹 검색 화면으로 돌아가기\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n        marginTop: \"15px\"\n      },\n      children: [\"Welcome, \", nickName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), !selectedUser ? /*#__PURE__*/_jsxDEV(Search, {\n      contract: contract,\n      onUserSelect: handleUserSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedUser.userNickName, \"\\uB2D8\\uC758 \\uAE30\\uB85D\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToSearch,\n          className: \"back-button\",\n          children: \"\\uB4A4\\uB85C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        blocks: searchedBlock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), !selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateBlock, {\n        contract: contract,\n        account: account,\n        blocks: blocks,\n        setBlocks: setBlocks,\n        fetchBlocks: fetchBlocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        blocks: blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Stats, {\n        onUserSelect: handleUserSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBTN, {\n        nickName: nickName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HelpBTN, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ULwT98/ZeORTCzTJEnVuH6iw6RU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Header","Footer","History","ChatBTN","HelpBTN","Search","IdProject","CreateBlock","Stats","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","contract","setContract","blocks","setBlocks","selectedUser","setSelectedUser","searchedBlock","setSearchedBlocks","nickName","setNickName","initWeb3","window","ethereum","web3","request","method","accounts","eth","getAccounts","length","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","fetchBlocks","console","error","alert","savedBlocks","localStorage","getItem","JSON","parse","setItem","stringify","blockCount","methods","getIndexOf","call","log","fetchedBlockResults","i","block","getInfo","push","gameName","serverName","className","remarks","date","Date","Number","toLocaleString","reverse","handleUserSelect","userAddress","userNickName","fetchSearchedBlocks","handleBackToSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","marginBottom","marginTop","onUserSelect","onClick","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\nimport Stats from \"./pages/Stats\";\n\nconst App = () => {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자 (닉네임, 주소 포함)\n  const [searchedBlock, setSearchedBlocks] = useState([]); // 검색된 블록 상태\n  const [nickName, setNickName] = useState(\"\");\n\n  // 🔹 MetaMask 연결 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n\n            // ✅ 계정의 블록 데이터를 가져옴\n            fetchBlocks(instance, account);\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\"MetaMask와의 연결에 문제가 발생했습니다. 확인해 주세요.\");\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. MetaMask를 설치해 주세요.\");\n      }\n    };\n\n    initWeb3();\n\n    // 🔹 새로고침 시 로컬 스토리지에서 블록 데이터 불러오기\n    const savedBlocks = localStorage.getItem(\"blocks\");\n    if (savedBlocks) {\n      setBlocks(JSON.parse(savedBlocks));\n    }\n  }, []);\n\n  // 🔹 blocks 상태 변경 시 로컬 스토리지에 저장\n  useEffect(() => {\n    if (blocks.length > 0) {\n      localStorage.setItem(\"blocks\", JSON.stringify(blocks));\n    }\n  }, [blocks]);\n\n  // 🔹 스마트 계약에서 블록 정보 가져오기\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n\n        const fetchedBlockResults = [];\n\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString(),\n          });\n          if (i + 1 === blockCount.length) setNickName(block[0]);\n        }\n\n        setBlocks(fetchedBlockResults.reverse());\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // ✅ 유저 선택 시 실행 (Stats에서 클릭하면 실행됨)\n  const handleUserSelect = (userAddress, userNickName) => {\n    setSelectedUser({ userAddress, userNickName });\n    fetchSearchedBlocks(userAddress);\n  };\n\n  // 🔹 특정 유저의 블록 검색 (닉네임 기반)\n  const fetchSearchedBlocks = async (account) => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n\n        const fetchedBlockResults = [];\n\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString(),\n          });\n        }\n\n        setSearchedBlocks(fetchedBlockResults.reverse());\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 🔹 검색 화면으로 돌아가기\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <Header />\n      <h1 style={{ textAlign: \"center\", marginBottom: \"15px\", marginTop: \"15px\" }}>\n        Welcome, {nickName}!\n      </h1>\n\n      {!selectedUser ? (\n        <Search contract={contract} onUserSelect={handleUserSelect} />\n      ) : (\n        <div className=\"user-history\">\n          <h2>\n            {selectedUser.userNickName}님의 기록\n            <button onClick={handleBackToSearch} className=\"back-button\">뒤로</button>\n          </h2>\n          <History blocks={searchedBlock} />\n        </div>\n      )}\n\n      {!selectedUser && (\n        <>\n          <CreateBlock contract={contract} account={account} blocks={blocks} setBlocks={setBlocks} fetchBlocks={fetchBlocks} />\n          <History blocks={blocks} />\n          <Stats onUserSelect={handleUserSelect} />\n        </>\n      )}\n\n      <Footer />\n      <div className=\"button-container\">\n        <ChatBTN nickName={nickName} />\n        <HelpBTN />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}