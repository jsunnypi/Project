{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport './App.css';\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]);\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            if (!Web3.utils.isAddress(account)) {\n              console.error(\"Invalid account address.\");\n              return;\n            }\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n            if (!deployedNetwork) {\n              alert(\"Contract가 현재 네트워크에 배포되지 않았습니다.\");\n              return;\n            }\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n            getInfo(instance, account);\n            //   getNickname(instance, account); // 닉네임 가져오기 함수\n          } else {\n            console.error(\"No accounts found.\");\n          }\n        } catch (error) {\n          console.error(\"Error initializing web3:\", error);\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n      }\n    };\n    initWeb3();\n  }, []);\n  const getInfo = async (contract, account) => {\n    try {\n      const blockCount = await contract.methods.blockCount().call();\n      const gotInfos = [];\n      for (let i = 1; i <= blockCount; i++) {\n        const block = await contract.methods.getInfo(account, i).call(); // account 주소와 blockId (i)를 전달\n        gotInfos.push(block);\n      }\n      setBlocks(gotInfos);\n    } catch (error) {\n      console.error(\"Error getting info:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateBlock, {\n      contract: contract,\n      account: account,\n      getInfo: getInfo,\n      blocks: blocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBTN, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelpBTN, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ja9rlr6upForw+5V3QrkAtDIuYk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Header","Footer","History","ChatBTN","HelpBTN","Search","IdProject","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","blocks","setBlocks","initWeb3","window","ethereum","web3","request","method","accounts","eth","getAccounts","length","utils","isAddress","console","error","networkId","net","getId","deployedNetwork","networks","alert","instance","Contract","abi","address","getInfo","blockCount","methods","call","gotInfos","i","block","push","className","children","href","rel","integrity","crossorigin","fileName","_jsxFileName","lineNumber","columnNumber","CreateBlock","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport './App.css';\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\n\n\nconst App = () => {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]);\n\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            if (!Web3.utils.isAddress(account)) {\n              console.error(\"Invalid account address.\");\n              return;\n            }\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n            if (!deployedNetwork) {\n              alert(\"Contract가 현재 네트워크에 배포되지 않았습니다.\");\n              return;\n            }\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n            getInfo(instance, account);\n         //   getNickname(instance, account); // 닉네임 가져오기 함수\n          } else {\n            console.error(\"No accounts found.\");\n          }\n        } catch (error) {\n          console.error(\"Error initializing web3:\", error);\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n      }\n    };\n    initWeb3();\n  }, []);\n\n  const getInfo = async (contract, account) => {\n    try {\n      const blockCount = await contract.methods.blockCount().call();\n      const gotInfos = [];\n      for (let i = 1; i <= blockCount; i++) {\n        const block = await contract.methods.getInfo(account, i).call();  // account 주소와 blockId (i)를 전달\n        gotInfos.push(block);\n      }\n      setBlocks(gotInfos);\n    } catch (error) {\n      console.error(\"Error getting info:\", error);\n    }\n  };\n\n\n\n  return (\n    <div className=\"main-container\">\n      <link\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\n        rel=\"stylesheet\"\n        integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\n        crossorigin=\"anonymous\"\n      /> \n      <Header />\n      <Search />\n      <CreateBlock \n      contract={contract} \n      account={account} \n      getInfo={getInfo} \n      blocks={blocks} />\n      <History />\n      <ChatBTN />\n      <HelpBTN />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}