{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport IdProject from \"./IdProject.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]);\n  const [gameName, setGameName] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [className, setClassName] = useState(\"\");\n  const [remarks, setRemarks] = useState(\"\");\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const accounts = await web3.eth.getAccounts();\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = IdProject.networks[networkId];\n          const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork && deployedNetwork.address);\n          setAccount(accounts[0]);\n          setContract(instance);\n          getInfo(instance);\n        } catch (error) {}\n      }\n    };\n    initWeb3();\n  }, []);\n  const getInfo = async contract => {\n    const blockCount = await contract.methods.blockCount().call();\n    const gotInfos = [];\n    for (let i = 1; i <= blockCount; i++) {\n      const block = await contract.methods.getInfo(i).call();\n      gotInfos.push(block);\n    }\n    setBlocks(gotInfos);\n  };\n  const insertInfo = async () => {\n    await contract.methods.insertInfo(gameName, serverName, className, remarks).send({\n      from: account,\n      gas: 3000000\n    });\n    getInfo(contract);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blocks.map(block => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [block.gameName, \" - \", block.serverName, \" - \", block.className, \" -\", \" \", block.remarks]\n      }, block.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setGameName(e.target.value),\n        placeholder: \"\\uAC8C\\uC784 \\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setServerName(e.target.value),\n        placeholder: \"\\uC11C\\uBC84 \\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setClassName(e.target.value),\n        placeholder: \"\\uD074\\uB798\\uC2A4 \\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        cols: \"50\",\n        onChange: e => setRemarks(e.target.value),\n        placeholder: \"\\uBE44\\uACE0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: insertInfo,\n        children: \"\\uC790\\uB8CC \\uC785\\uB825/\\uBE14\\uB85D \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"krD4ejttNki/6yWXpcXs51V/tWk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","IdProject","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","blocks","setBlocks","gameName","setGameName","serverName","setServerName","className","setClassName","remarks","setRemarks","initWeb3","window","ethereum","web3","request","method","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","getInfo","error","blockCount","methods","call","gotInfos","i","block","push","insertInfo","send","from","gas","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","placeholder","rows","cols","onClick","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport IdProject from \"./IdProject.json\";\n\nconst App = () => {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]);\n  const [gameName, setGameName] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [className, setClassName] = useState(\"\");\n  const [remarks, setRemarks] = useState(\"\");\n\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\n          const accounts = await web3.eth.getAccounts();\n          const networkId = await web3.eth.net.getId();\n          const deployedNetwork = IdProject.networks[networkId];\n          const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork && deployedNetwork.address);\n          \n          setAccount(accounts[0]);\n          setContract(instance);\n          getInfo(instance);\n        } catch (error) {}\n      }\n    };\n    initWeb3();\n  }, []);\n\n  const getInfo = async (contract) => {\n    const blockCount = await contract.methods.blockCount().call();\n    const gotInfos = [];\n    for (let i = 1; i <= blockCount; i++) {\n      const block = await contract.methods.getInfo(i).call();\n      gotInfos.push(block);\n    }\n    setBlocks(gotInfos);\n  };\n\n  const insertInfo = async () => {\n    await contract.methods\n      .insertInfo(gameName, serverName, className, remarks)\n      .send({ from: account, gas: 3000000 });\n    getInfo(contract);\n  };\n  return (\n    <div>\n      <ul>\n        {blocks.map((block) => (\n          <li key={block.id}>\n            {block.gameName} - {block.serverName} - {block.className} -{\" \"}\n            {block.remarks}\n          </li>\n        ))}\n      </ul>\n\n      <p><input type=\"text\" onChange={(e) => setGameName(e.target.value)} placeholder=\"게임 이름\" /></p>\n      <p><input type=\"text\" onChange={(e) => setServerName(e.target.value)} placeholder=\"서버 이름\" /></p>\n      <p><input type=\"text\" onChange={(e) => setClassName(e.target.value)} placeholder=\"클래스 이름\" /></p>\n      <p><textarea rows=\"10\" cols=\"50\" onChange={(e) => setRemarks(e.target.value)} placeholder=\"비고\" /></p>\n      <p><button onClick={insertInfo}>자료 입력/블록 생성</button></p>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}