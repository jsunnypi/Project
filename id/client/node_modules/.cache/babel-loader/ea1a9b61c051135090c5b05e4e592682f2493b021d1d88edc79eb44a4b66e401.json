{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\pages\\\\Stats.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport IdProject from \"../IdProject.json\"; // 스마트 계약 ABI 파일\nimport \"../css/stats.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // 배포된 스마트 계약 주소 입력\n\nexport function Stats({\n  contract,\n  onUserSelect\n}) {\n  _s();\n  const [totalUsers, setTotalUsers] = useState(0);\n  const [totalBlocks, setTotalBlocks] = useState(0);\n  const [recentUsers, setRecentUsers] = useState([]);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        if (!window.ethereum) {\n          console.error(\"MetaMask not detected\");\n          return;\n        }\n        const web3 = new Web3(window.ethereum);\n        await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = IdProject.networks[networkId];\n        const contract = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n\n        // 스마트 계약에서 데이터 가져오기\n        const userCount = await contract.methods.getTotalUserCount().call();\n        const blockCount = await contract.methods.getTotalBlockCount().call();\n        const recentUserList = await contract.methods.getRecentUser().call();\n        console.log(\"최근활동유저!!!!\", recentUserList);\n        setTotalUsers(userCount);\n        setTotalBlocks(blockCount);\n\n        // 최근 활동 유저 정보를 닉네임만 추출하여 업데이트\n        const updatedRecentUsers = recentUserList[0].map(nickname => ({\n          nickname // 닉네임만 추출\n        }));\n        setRecentUsers(updatedRecentUsers);\n      } catch (error) {\n        console.error(\"Error fetching stats:\", error);\n      }\n    };\n    fetchStats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"total-table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"stats-title\",\n            children: \"\\uCD1D \\uB204\\uC801 \\uC720\\uC800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"total-ctn\",\n            children: totalUsers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"stats-title\",\n            children: \"\\uCD1D \\uB204\\uC801 \\uBE14\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"total-ctn\",\n            children: totalBlocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uCD5C\\uADFC \\uD65C\\uB3D9 \\uC720\\uC800\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-list\",\n        children: recentUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-list\",\n          children: recentUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => onUserSelect(user.address),\n              style: {\n                textDecoration: \"underline\",\n                color: \"yellow\",\n                cursor: \"pointer\"\n              },\n              children: user.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : \"데이터 없음\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Stats, \"1n3UHtw0tSzsKdIgwMfDuoZ8rMc=\");\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["useEffect","useState","Web3","IdProject","jsxDEV","_jsxDEV","Fragment","_Fragment","contractAddress","Stats","contract","onUserSelect","_s","totalUsers","setTotalUsers","totalBlocks","setTotalBlocks","recentUsers","setRecentUsers","fetchStats","window","ethereum","console","error","web3","request","method","networkId","eth","net","getId","deployedNetwork","networks","Contract","abi","address","userCount","methods","getTotalUserCount","call","blockCount","getTotalBlockCount","recentUserList","getRecentUser","log","updatedRecentUsers","map","nickname","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","user","index","onClick","style","textDecoration","color","cursor","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/pages/Stats.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport IdProject from \"../IdProject.json\"; // 스마트 계약 ABI 파일\r\nimport \"../css/stats.css\";\r\n\r\nconst contractAddress = \"YOUR_CONTRACT_ADDRESS\"; // 배포된 스마트 계약 주소 입력\r\n\r\nexport function Stats({contract, onUserSelect}) {\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [totalBlocks, setTotalBlocks] = useState(0);\r\n  const [recentUsers, setRecentUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchStats = async () => {\r\n      try {\r\n        if (!window.ethereum) {\r\n          console.error(\"MetaMask not detected\");\r\n          return;\r\n        }\r\n\r\n        const web3 = new Web3(window.ethereum);\r\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\r\n        const networkId = await web3.eth.net.getId();\r\n        const deployedNetwork = IdProject.networks[networkId];\r\n        const contract = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\r\n\r\n        // 스마트 계약에서 데이터 가져오기\r\n        const userCount = await contract.methods.getTotalUserCount().call();\r\n        const blockCount = await contract.methods.getTotalBlockCount().call();\r\n        const recentUserList = await contract.methods.getRecentUser().call();\r\n        console.log(\"최근활동유저!!!!\",recentUserList); \r\n\r\n        setTotalUsers(userCount);\r\n        setTotalBlocks(blockCount);\r\n\r\n        // 최근 활동 유저 정보를 닉네임만 추출하여 업데이트\r\n        const updatedRecentUsers = recentUserList[0].map((nickname) => ({\r\n          nickname // 닉네임만 추출\r\n        }));\r\n        setRecentUsers(updatedRecentUsers);\r\n      } catch (error) {\r\n        console.error(\"Error fetching stats:\", error);\r\n      }\r\n    };\r\n\r\n    fetchStats();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"total-table\">\r\n        <tbody>\r\n          <tr>\r\n            <td className=\"stats-title\">총 누적 유저</td>\r\n            <td className=\"total-ctn\">{totalUsers}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className=\"stats-title\">총 누적 블록</td>\r\n            <td className=\"total-ctn\" >{totalBlocks}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div className=\"list-form\">\r\n        <p>최근 활동 유저</p>\r\n        <div className=\"stats-list\">\r\n          {recentUsers.length > 0 ? (\r\n            <div className=\"user-list\">\r\n              {recentUsers.map((user, index) => (\r\n                <div key={index} className=\"user-item\">\r\n                  <span\r\n                    onClick={() => onUserSelect(user.address)}\r\n                    style={{\r\n                      textDecoration: \"underline\",\r\n                      color: \"yellow\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    {user.nickname}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            \"데이터 없음\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}