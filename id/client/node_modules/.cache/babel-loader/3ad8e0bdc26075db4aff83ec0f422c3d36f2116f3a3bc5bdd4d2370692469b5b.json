{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\pages\\\\Intro.js\",\n  _s = $RefreshSig$();\nimport \"../css/intro.css\";\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Intro = () => {\n  _s();\n  const [showTutorial, setShowTutorial] = useState(false);\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleTutorialClick = () => {\n    setShowTutorial(prevState => !prevState); // 튜토리얼 이미지 표시/숨기기\n  };\n  const handleStartClick = async () => {\n    if (isLoggedIn) {\n      navigate(\"/app\"); // 로그인 되어 있으면 바로 /app으로 이동\n    } else {\n      if (window.ethereum) {\n        try {\n          setIsLoggedIn(true); // 로그인 요청 시작 시 로딩 상태로 변경\n\n          // MetaMask에 연결된 계정이 있는지 확인\n          const accounts = await window.ethereum.request({\n            method: 'eth_accounts'\n          });\n          if (accounts.length > 0) {\n            navigate(\"/app\"); // 로그인 되어 있으면 바로 /app으로 이동\n          } else {\n            alert(\"MetaMask에 로그인되어 있지 않습니다. 로그인 후 다시 시도해주세요\");\n            const newAccounts = await window.ethereum.request({\n              method: 'eth_requestAccounts'\n            });\n            if (newAccounts.length > 0) {\n              navigate(\"/app\"); // 로그인 후 /app으로 이동\n            } else {\n              alert(\"로그인 실패. 다시 시도해주세요.\");\n            }\n          }\n        } catch (error) {\n          console.error(\"로그인 오류:\", error);\n        } finally {\n          setIsLoggedIn(false); // 로딩 상태 종료\n        }\n      } else {\n        alert(\"MetaMask가 설치되어 있지 않습니다.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container-int\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-img\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/main_bg.png\",\n        alt: \"main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group\",\n      role: \"group\",\n      \"aria-label\": \"Basic mixed styles example\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-tutorial\",\n        onClick: handleTutorialClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-start\",\n        onClick: handleStartClick,\n        disabled: isLoggedIn // 로그인 중일 때 버튼 비활성화\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), showTutorial && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tutorial-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tutorial-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/tutorial.png\",\n            alt: \"Tutorial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-close\",\n            onClick: handleTutorialClick,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Intro, \"PYaaA2HiYqL4hXLMipsthVUsWPo=\", false, function () {\n  return [useNavigate];\n});\n_c = Intro;\nexport default Intro;\nvar _c;\n$RefreshReg$(_c, \"Intro\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Intro","_s","showTutorial","setShowTutorial","navigate","isLoggedIn","setIsLoggedIn","handleTutorialClick","prevState","handleStartClick","window","ethereum","accounts","request","method","length","alert","newAccounts","error","console","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","role","type","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/pages/Intro.js"],"sourcesContent":["import \"../css/intro.css\";\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Intro = () => {\r\n  const [showTutorial, setShowTutorial] = useState(false);\r\n  const navigate = useNavigate(); \r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleTutorialClick = () => {\r\n    setShowTutorial(prevState => !prevState);  // 튜토리얼 이미지 표시/숨기기\r\n  };\r\n\r\n  const handleStartClick = async () => {\r\n    if (isLoggedIn) {\r\n      navigate(\"/app\");  // 로그인 되어 있으면 바로 /app으로 이동\r\n    } else {\r\n      if (window.ethereum) {\r\n        try {\r\n          setIsLoggedIn(true);  // 로그인 요청 시작 시 로딩 상태로 변경\r\n\r\n          // MetaMask에 연결된 계정이 있는지 확인\r\n          const accounts = await window.ethereum.request({ method: 'eth_accounts' });\r\n\r\n          if (accounts.length > 0) {\r\n            navigate(\"/app\");  // 로그인 되어 있으면 바로 /app으로 이동\r\n          } else {\r\n            alert(\"MetaMask에 로그인되어 있지 않습니다. 로그인 후 다시 시도해주세요\");\r\n            const newAccounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            \r\n            if (newAccounts.length > 0) {\r\n              navigate(\"/app\");  // 로그인 후 /app으로 이동\r\n            } else {\r\n              alert(\"로그인 실패. 다시 시도해주세요.\");\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(\"로그인 오류:\", error);\r\n        } finally {\r\n          setIsLoggedIn(false);  // 로딩 상태 종료\r\n        }\r\n      } else {\r\n        alert(\"MetaMask가 설치되어 있지 않습니다.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container-int\">\r\n      <div className=\"main-img\">\r\n        <img src=\"/main_bg.png\" alt=\"main\" />\r\n      </div>\r\n      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-tutorial\"\r\n          onClick={handleTutorialClick} />  \r\n          \r\n          <button type=\"button\" className=\"btn btn-start\"\r\n            onClick={handleStartClick}\r\n            disabled={isLoggedIn}  // 로그인 중일 때 버튼 비활성화\r\n          />\r\n\r\n      {showTutorial && (\r\n        <div className=\"tutorial-overlay\">\r\n          <div className=\"tutorial-content\">\r\n            <img src=\"/tutorial.png\" alt=\"Tutorial\" />\r\n            <button className=\"btn-close\" onClick={handleTutorialClick}>X</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAChCJ,eAAe,CAACK,SAAS,IAAI,CAACA,SAAS,CAAC,CAAC,CAAE;EAC7C,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAIJ,UAAU,EAAE;MACdD,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAE;IACrB,CAAC,MAAM;MACL,IAAIM,MAAM,CAACC,QAAQ,EAAE;QACnB,IAAI;UACFL,aAAa,CAAC,IAAI,CAAC,CAAC,CAAE;;UAEtB;UACA,MAAMM,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAe,CAAC,CAAC;UAE1E,IAAIF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;YACvBX,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAE;UACrB,CAAC,MAAM;YACLY,KAAK,CAAC,0CAA0C,CAAC;YACjD,MAAMC,WAAW,GAAG,MAAMP,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;cAAEC,MAAM,EAAE;YAAsB,CAAC,CAAC;YAEpF,IAAIG,WAAW,CAACF,MAAM,GAAG,CAAC,EAAE;cAC1BX,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAE;YACrB,CAAC,MAAM;cACLY,KAAK,CAAC,oBAAoB,CAAC;YAC7B;UACF;QACF,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QACjC,CAAC,SAAS;UACRZ,aAAa,CAAC,KAAK,CAAC,CAAC,CAAE;QACzB;MACF,CAAC,MAAM;QACLU,KAAK,CAAC,yBAAyB,CAAC;MAClC;IACF;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKqB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCtB,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBtB,OAAA;QAAKuB,GAAG,EAAC,cAAc;QAACC,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACN5B,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAACQ,IAAI,EAAC,OAAO;MAAC,cAAW,4BAA4B;MAAAP,QAAA,gBAC7EtB,OAAA;QACE8B,IAAI,EAAC,QAAQ;QACbT,SAAS,EAAC,kBAAkB;QAC5BU,OAAO,EAAEvB;MAAoB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEhC5B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACT,SAAS,EAAC,eAAe;QAC7CU,OAAO,EAAErB,gBAAiB;QAC1BsB,QAAQ,EAAE1B,UAAW,CAAE;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,EAELzB,YAAY,iBACXH,OAAA;QAAKqB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/BtB,OAAA;UAAKqB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BtB,OAAA;YAAKuB,GAAG,EAAC,eAAe;YAACC,GAAG,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1C5B,OAAA;YAAQqB,SAAS,EAAC,WAAW;YAACU,OAAO,EAAEvB,mBAAoB;YAAAc,QAAA,EAAC;UAAC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtEID,KAAK;EAAA,QAEQH,WAAW;AAAA;AAAAmC,EAAA,GAFxBhC,KAAK;AAwEX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}