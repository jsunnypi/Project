{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\pages\\\\History.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../css/history.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function History({\n  blocks\n}) {\n  _s();\n  const [convertedDate, setConvertedDate] = useState([]);\n  useEffect(() => {\n    const convertDates = blocks.map(block => {\n      const blockTimestamp = block.date;\n      console.log('날짜찍어>>>', blockTimestamp); // 타임스탬프 값 확인\n\n      if (!blockTimestamp || isNaN(blockTimestamp)) {\n        return \"Invalid Date\"; // 유효하지 않으면 기본 메시지\n      }\n      const date = new Date(blockTimestamp * 1000); // 초 단위 타임스탬프는 밀리초로 변환해야 함\n      if (isNaN(date.getTime())) {\n        return \"Invalid Date\"; // 유효하지 않은 날짜 처리\n      }\n      return date.toLocaleString(); // 변환된 날짜를 로컬 형식으로 반환\n    });\n    setConvertedDate(convertDates); // 변환된 날짜들을 상태에 저장\n  }, [blocks]); // blocks가 변경될 때마다 useEffect 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"con-history\",\n    children: blocks.length > 0 ? blocks.map((block, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"his-con-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"his-title-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"his-title\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"his-title-data\",\n                children: [block.nickName, \"\\uB2D8\\uC758 \", block.gameName, \" / \", block.serverName, \" / \", block.className, \" \\uC811\\uC18D \\uAE30\\uB85D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: block.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              rowSpan: \"2\",\n              className: \"sub-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                disabled: true,\n                rows: \"5\",\n                className: \"show-comment\",\n                value: block.remarks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No blocks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) // 블록이 없을 경우 안내 메시지 표시\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(History, \"BT35AJPYdWPmipn5uEEi1FTlWoU=\");\n_c = History;\nexport default History;\nvar _c;\n$RefreshReg$(_c, \"History\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","History","blocks","_s","convertedDate","setConvertedDate","convertDates","map","block","blockTimestamp","date","console","log","isNaN","Date","getTime","toLocaleString","className","children","length","index","fileName","_jsxFileName","lineNumber","columnNumber","nickName","gameName","serverName","rowSpan","colSpan","disabled","rows","value","remarks","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/pages/History.js"],"sourcesContent":["import React from 'react';\r\nimport '../css/history.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport function History({ blocks }) {\r\n  const [convertedDate, setConvertedDate] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const convertDates = blocks.map((block) => {\r\n      const blockTimestamp = block.date;\r\n      console.log('날짜찍어>>>', blockTimestamp);  // 타임스탬프 값 확인\r\n\r\n      if (!blockTimestamp || isNaN(blockTimestamp)) {\r\n        return \"Invalid Date\"; // 유효하지 않으면 기본 메시지\r\n      }\r\n\r\n      const date = new Date(blockTimestamp * 1000); // 초 단위 타임스탬프는 밀리초로 변환해야 함\r\n      if (isNaN(date.getTime())) {\r\n        return \"Invalid Date\"; // 유효하지 않은 날짜 처리\r\n      }\r\n\r\n      return date.toLocaleString(); // 변환된 날짜를 로컬 형식으로 반환\r\n    });\r\n\r\n    setConvertedDate(convertDates); // 변환된 날짜들을 상태에 저장\r\n  }, [blocks]); // blocks가 변경될 때마다 useEffect 실행\r\n\r\n\r\n  return (\r\n    <div className=\"con-history\">\r\n      {blocks.length > 0 ? (\r\n        blocks.map((block, index) => (\r\n          <div key={index}>\r\n            <table className=\"his-con-table\">\r\n              <thead>\r\n              <tr className=\"his-title-date\">\r\n                <td></td>\r\n                <td className=\"his-title\">\r\n                  <span className=\"his-title-data\">\r\n                    {block.nickName}님의 {block.gameName} / {block.serverName} / {block.className} 접속 기록\r\n                  </span>\r\n                </td>\r\n                <td>{block.date}</td>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td rowSpan=\"2\" className=\"sub-img\"></td>\r\n                  <td colSpan=\"2\">\r\n                    <textarea\r\n                      disabled\r\n                      rows=\"5\"\r\n                      className=\"show-comment\"\r\n                      value={block.remarks}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No blocks available.</p> // 블록이 없을 경우 안내 메시지 표시\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default History;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}