{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자\n  const [searchedBlock, setSearchedBlock] = useState([]);\n  const [nickName, setNickName] = useState(\"\");\n\n  // 메타마스크 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            console.log(networkId);\n            const deployedNetwork = IdProject.networks[networkId];\n            console.log(deployedNetwork.address);\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n\n            // 계약에서 직접 데이터 불러오기\n            fetchBlocks(instance, account);\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\"MetaMask와의 연결에 문제가 발생했습니다. MetaMask가 설치되어 있고, 계정이 연결되었는지 확인해 주세요.\");\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. MetaMask를 설치해 주세요.\");\n      }\n    };\n    initWeb3();\n    // 새로고침 시 로컬 스토리지에서 blocks 데이터 불러오기\n    const savedBlocks = localStorage.getItem(\"blocks\");\n    if (savedBlocks) {\n      setBlocks(JSON.parse(savedBlocks));\n    }\n  }, []);\n\n  // blocks 상태 업데이트 시 로컬 스토리지에 저장\n  useEffect(() => {\n    if (blocks.length > 0) {\n      localStorage.setItem(\"blocks\", JSON.stringify(blocks));\n    }\n  }, [blocks]);\n\n  // 블록 정보 가져오기 (스마트 계약에서 실시간으로 블록 데이터 불러오기)\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        // blockCount는 BigInt로 반환될 수 있으므로, 이를 BigInt로 처리합니다.\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          // blockCount가 BigInt이므로 비교할 때도 BigInt로 비교\n          console.log(\"No blocks available.\");\n          return;\n        }\n        const fetchedBlockResults = [];\n\n        // i는 BigInt로 처리합니다. (1n은 BigInt 값)\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          console.log(`Block ${i}:`, block);\n          fetchedBlockResults.push({\n            // blockId: blockCount[i].toString(), // BigInt를 string으로 변환하여 저장\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString() // 타임스탬프 변환\n          });\n          if (i + 1 === blockCount.length) setNickName(block[0]);\n        }\n        setBlocks(fetchedBlockResults); // 블록 상태 업데이트\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 선택된 사용자 상태 업데이트\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n  };\n\n  // 사용자 선택 취소 (검색 화면으로 돌아가기)\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", nickName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), !selectedUser ?\n    /*#__PURE__*/\n    // 검색 화면\n    _jsxDEV(Search, {\n      contract: contract,\n      onUserSelect: handleUserSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // 선택된 사용자 히스토리 화면\n    _jsxDEV(\"div\", {\n      className: \"user-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToSearch,\n        className: \"back-button\",\n        children: \"\\uB3CC\\uC544\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedUser.nickName, \"\\uB2D8\\uC758 \\uAE30\\uB85D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        user: selectedUser,\n        blocks: blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), !selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateBlock, {\n        contract: contract,\n        account: account,\n        blocks: blocks,\n        setBlocks: setBlocks,\n        fetchBlocks: fetchBlocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        blocks: blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBTN, {\n        nickName: nickName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HelpBTN, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Y7TSbA5E9JGtB2SAH1bO2VTGWd0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Header","Footer","History","ChatBTN","HelpBTN","Search","IdProject","CreateBlock","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","contract","setContract","blocks","setBlocks","selectedUser","setSelectedUser","searchedBlock","setSearchedBlock","nickName","setNickName","initWeb3","window","ethereum","web3","request","method","accounts","eth","getAccounts","length","networkId","net","getId","console","log","deployedNetwork","networks","address","instance","Contract","abi","fetchBlocks","error","alert","savedBlocks","localStorage","getItem","JSON","parse","setItem","stringify","blockCount","methods","getIndexOf","call","fetchedBlockResults","i","block","getInfo","push","gameName","serverName","className","remarks","date","Date","Number","toLocaleString","handleUserSelect","user","handleBackToSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","onUserSelect","onClick","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\n\nconst App = () => {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자\n  const [searchedBlock, setSearchedBlock] = useState([]);\n  const [nickName, setNickName] = useState(\"\");\n\n  // 메타마스크 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            console.log(networkId);\n            const deployedNetwork = IdProject.networks[networkId];\n            console.log(deployedNetwork.address);\n            const instance = new web3.eth.Contract(\n              IdProject.abi,\n              deployedNetwork.address\n            );\n\n            setContract(instance);\n\n            // 계약에서 직접 데이터 불러오기\n            fetchBlocks(instance, account);\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\n            \"MetaMask와의 연결에 문제가 발생했습니다. MetaMask가 설치되어 있고, 계정이 연결되었는지 확인해 주세요.\"\n          );\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. MetaMask를 설치해 주세요.\");\n      }\n    };\n    initWeb3();\n    // 새로고침 시 로컬 스토리지에서 blocks 데이터 불러오기\n    const savedBlocks = localStorage.getItem(\"blocks\");\n    if (savedBlocks) {\n      setBlocks(JSON.parse(savedBlocks));\n    }\n  }, []);\n\n  // blocks 상태 업데이트 시 로컬 스토리지에 저장\n  useEffect(() => {\n    if (blocks.length > 0) {\n      localStorage.setItem(\"blocks\", JSON.stringify(blocks));\n    }\n  }, [blocks]);\n\n  // 블록 정보 가져오기 (스마트 계약에서 실시간으로 블록 데이터 불러오기)\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        // blockCount는 BigInt로 반환될 수 있으므로, 이를 BigInt로 처리합니다.\n        const blockCount = await contract.methods.getIndexOf(account).call();\n\n        if (blockCount.length === 0n) {\n          // blockCount가 BigInt이므로 비교할 때도 BigInt로 비교\n          console.log(\"No blocks available.\");\n          return;\n        }\n\n        const fetchedBlockResults = [];\n\n        // i는 BigInt로 처리합니다. (1n은 BigInt 값)\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods\n            .getInfo(account, blockCount[i])\n            .call();\n          console.log(`Block ${i}:`, block);\n\n          fetchedBlockResults.push({\n            // blockId: blockCount[i].toString(), // BigInt를 string으로 변환하여 저장\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString(), // 타임스탬프 변환\n          });\n          if (i + 1 === blockCount.length) setNickName(block[0]);\n        }\n\n        setBlocks(fetchedBlockResults); // 블록 상태 업데이트\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 선택된 사용자 상태 업데이트\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n    \n  };\n\n  // 사용자 선택 취소 (검색 화면으로 돌아가기)\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <Header />\n      <h1>Welcome, {nickName}!</h1>\n      {!selectedUser ? (\n        // 검색 화면\n        <Search contract={contract} onUserSelect={handleUserSelect} />\n      ) : (\n        // 선택된 사용자 히스토리 화면\n        <div className=\"user-history\">\n          <button onClick={handleBackToSearch} className=\"back-button\">\n            돌아가기\n          </button>\n          <h2>{selectedUser.nickName}님의 기록</h2>\n          <History user={selectedUser} blocks={blocks} />\n        </div>\n      )}\n      {!selectedUser && (\n        <>\n          {/* 블록 생성 및 전체 블록 히스토리 */}\n          <CreateBlock\n            contract={contract}\n            account={account}\n            blocks={blocks}\n            setBlocks={setBlocks}\n            fetchBlocks={fetchBlocks}\n          />\n          <History blocks={blocks} />\n        </>\n      )}\n      <Footer />\n      <div className=\"button-container\">\n        <ChatBTN nickName={nickName} />\n        <HelpBTN />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}