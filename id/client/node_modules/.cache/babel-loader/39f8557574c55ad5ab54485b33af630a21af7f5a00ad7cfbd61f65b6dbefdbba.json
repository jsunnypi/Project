{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport './App.css';\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]);\n  const [nickName, setNickName] = useState(\"\");\n  const [gameName, setGameName] = useState(\"\");\n  const [serverName, setServerName] = useState(\"\");\n  const [className, setClassName] = useState(\"\");\n  const [remarks, setRemarks] = useState(\"\");\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n            //  getInfo(instance, account);\n          } else {\n            console.error(\"No accounts found.\");\n          }\n        } catch (error) {\n          console.error(\"Error initializing web3:\", error);\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n      }\n    };\n    initWeb3();\n  }, []);\n  const insertInfo = async () => {\n    console.log(nickName, gameName, serverName, className, remarks);\n    try {\n      // 스마트 계약 호출\n      await contract.methods.insertInfo(nickName, gameName, serverName, className, remarks).send({\n        from: account,\n        gas: 3000000\n      });\n\n      // 새로 추가된 데이터를 blocks에 반영\n      const newBlock = {\n        id: blocks.length + 1,\n        // 고유 ID\n        nickName,\n        gameName,\n        serverName,\n        className,\n        remarks\n      };\n\n      // blocks 상태 업데이트\n      setBlocks([...blocks, newBlock]);\n\n      // 입력 필드 초기화\n      setNickName(\"\");\n      setGameName(\"\");\n      setServerName(\"\");\n      setClassName(\"\");\n      setRemarks(\"\");\n    } catch (error) {\n      console.error(\"Error inserting info:\", error);\n    }\n  };\n  const getInfo = async (contract, account) => {\n    try {\n      const blockCount = await contract.methods.blockCount().call(); // 블록 수 가져오기\n      console.log(\"blockCount:\", blockCount); // blockCount 값을 확인\n      const gotInfos = [];\n      for (let i = 1; i <= blockCount; i++) {\n        // block 정보 요청 전에 콘솔 로그 추가\n        console.log(\"Fetching block with account:\", account, \"and blockId:\", i);\n        const block = await contract.methods.getInfo(account, i).call(); // 블록 정보 가져오기\n        gotInfos.push(block); // 블록 정보를 gotInfos 배열에 추가\n      }\n      setBlocks(gotInfos); // blocks 상태에 데이터를 업데이트\n      console.log(\"blocks:\", gotInfos); // 가져온 블록 정보 출력\n    } catch (error) {\n      console.error(\"Error getting info:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\",\n      rel: \"stylesheet\",\n      integrity: \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateBlock, {\n      contract: contract,\n      account: account,\n      getInfo: getInfo,\n      blocks: blocks,\n      setBlocks: setBlocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      blocks: blocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBTN, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelpBTN, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hqxUbvXSc078DquRqy5uhUGIAW4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Header","Footer","History","ChatBTN","HelpBTN","Search","IdProject","CreateBlock","jsxDEV","_jsxDEV","App","_s","account","setAccount","contract","setContract","blocks","setBlocks","nickName","setNickName","gameName","setGameName","serverName","setServerName","className","setClassName","remarks","setRemarks","initWeb3","window","ethereum","web3","request","method","accounts","eth","getAccounts","length","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","console","error","insertInfo","log","methods","send","from","gas","newBlock","id","getInfo","blockCount","call","gotInfos","i","block","push","children","href","rel","integrity","crossorigin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport './App.css';\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\n\nconst App = () => {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]);\n   const [nickName, setNickName] = useState(\"\");\n    const [gameName, setGameName] = useState(\"\");\n    const [serverName, setServerName] = useState(\"\");\n    const [className, setClassName] = useState(\"\");\n    const [remarks, setRemarks] = useState(\"\");\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n            \n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n          //  getInfo(instance, account);\n          \n          } else {\n            console.error(\"No accounts found.\");\n          }\n        } catch (error) {\n          console.error(\"Error initializing web3:\", error);\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n      }\n    };\n    initWeb3();\n  }, []);\n\n  const insertInfo = async () => {\n    console.log(nickName, gameName, serverName, className, remarks);\n    try {\n      // 스마트 계약 호출\n      await contract.methods\n        .insertInfo(nickName, gameName, serverName, className, remarks)\n        .send({ from: account, gas: 3000000 });\n\n      // 새로 추가된 데이터를 blocks에 반영\n      const newBlock = {\n        id: blocks.length + 1, // 고유 ID\n        nickName,\n        gameName,\n        serverName,\n        className,\n        remarks,\n      };\n\n      // blocks 상태 업데이트\n      setBlocks([...blocks, newBlock]);\n\n      // 입력 필드 초기화\n      setNickName(\"\");\n      setGameName(\"\");\n      setServerName(\"\");\n      setClassName(\"\");\n      setRemarks(\"\");\n    } catch (error) {\n      console.error(\"Error inserting info:\", error);\n    }\n};\n\n  const getInfo = async (contract, account) => {\n    try {\n      const blockCount = await contract.methods.blockCount().call();  // 블록 수 가져오기\n      console.log(\"blockCount:\", blockCount);  // blockCount 값을 확인\n      const gotInfos = [];\n      for (let i = 1; i <= blockCount; i++) {\n        // block 정보 요청 전에 콘솔 로그 추가\n        console.log(\"Fetching block with account:\", account, \"and blockId:\", i);\n  \n        const block = await contract.methods.getInfo(account, i).call();  // 블록 정보 가져오기\n        gotInfos.push(block);  // 블록 정보를 gotInfos 배열에 추가\n      }\n      setBlocks(gotInfos);  // blocks 상태에 데이터를 업데이트\n      console.log(\"blocks:\", gotInfos);  // 가져온 블록 정보 출력\n    } catch (error) {\n      console.error(\"Error getting info:\", error);\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <link\n        href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\n        rel=\"stylesheet\"\n        integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\n        crossorigin=\"anonymous\"\n      /> \n      <Header />\n      <Search />\n      <CreateBlock \n      contract={contract} \n      account={account} \n      getInfo={getInfo} \n      blocks={blocks}\n      setBlocks={setBlocks} />\n      <History \n      blocks={blocks}\n      />\n      <ChatBTN />\n      <HelpBTN />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,MAAM,MAAM,gBAAgB;AACnC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,OAAO,EAAEC,OAAO,QAAQ,iBAAiB;AAClD,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,WAAW,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,UAAU,EAAEC,aAAa,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACd,MAAM8B,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAIC,MAAM,CAACC,QAAQ,EAAE;QACnB,MAAMC,IAAI,GAAG,IAAIhC,IAAI,CAAC8B,MAAM,CAACC,QAAQ,CAAC;QACtC,IAAI;UACF,MAAMD,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;YAAEC,MAAM,EAAE;UAAsB,CAAC,CAAC;UAChE,MAAMC,QAAQ,GAAG,MAAMH,IAAI,CAACI,GAAG,CAACC,WAAW,CAAC,CAAC;UAC7C,IAAIF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;YACvB,MAAMzB,OAAO,GAAGsB,QAAQ,CAAC,CAAC,CAAC;YAC3BrB,UAAU,CAACD,OAAO,CAAC;YACnB,MAAM0B,SAAS,GAAG,MAAMP,IAAI,CAACI,GAAG,CAACI,GAAG,CAACC,KAAK,CAAC,CAAC;YAC5C,MAAMC,eAAe,GAAGnC,SAAS,CAACoC,QAAQ,CAACJ,SAAS,CAAC;YAErD,MAAMK,QAAQ,GAAG,IAAIZ,IAAI,CAACI,GAAG,CAACS,QAAQ,CAACtC,SAAS,CAACuC,GAAG,EAAEJ,eAAe,CAACK,OAAO,CAAC;YAC9E/B,WAAW,CAAC4B,QAAQ,CAAC;YACvB;UAEA,CAAC,MAAM;YACLI,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;UACrC;QACF,CAAC,CAAC,OAAOA,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAClD;MACF,CAAC,MAAM;QACLD,OAAO,CAACC,KAAK,CAAC,qDAAqD,CAAC;MACtE;IACF,CAAC;IACDpB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMqB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BF,OAAO,CAACG,GAAG,CAAChC,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,EAAEE,SAAS,EAAEE,OAAO,CAAC;IAC/D,IAAI;MACF;MACA,MAAMZ,QAAQ,CAACqC,OAAO,CACnBF,UAAU,CAAC/B,QAAQ,EAAEE,QAAQ,EAAEE,UAAU,EAAEE,SAAS,EAAEE,OAAO,CAAC,CAC9D0B,IAAI,CAAC;QAAEC,IAAI,EAAEzC,OAAO;QAAE0C,GAAG,EAAE;MAAQ,CAAC,CAAC;;MAExC;MACA,MAAMC,QAAQ,GAAG;QACfC,EAAE,EAAExC,MAAM,CAACqB,MAAM,GAAG,CAAC;QAAE;QACvBnB,QAAQ;QACRE,QAAQ;QACRE,UAAU;QACVE,SAAS;QACTE;MACF,CAAC;;MAED;MACAT,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEuC,QAAQ,CAAC,CAAC;;MAEhC;MACApC,WAAW,CAAC,EAAE,CAAC;MACfE,WAAW,CAAC,EAAE,CAAC;MACfE,aAAa,CAAC,EAAE,CAAC;MACjBE,YAAY,CAAC,EAAE,CAAC;MAChBE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAEC,MAAMS,OAAO,GAAG,MAAAA,CAAO3C,QAAQ,EAAEF,OAAO,KAAK;IAC3C,IAAI;MACF,MAAM8C,UAAU,GAAG,MAAM5C,QAAQ,CAACqC,OAAO,CAACO,UAAU,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;MAChEZ,OAAO,CAACG,GAAG,CAAC,aAAa,EAAEQ,UAAU,CAAC,CAAC,CAAE;MACzC,MAAME,QAAQ,GAAG,EAAE;MACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIH,UAAU,EAAEG,CAAC,EAAE,EAAE;QACpC;QACAd,OAAO,CAACG,GAAG,CAAC,8BAA8B,EAAEtC,OAAO,EAAE,cAAc,EAAEiD,CAAC,CAAC;QAEvE,MAAMC,KAAK,GAAG,MAAMhD,QAAQ,CAACqC,OAAO,CAACM,OAAO,CAAC7C,OAAO,EAAEiD,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC,CAAE;QAClEC,QAAQ,CAACG,IAAI,CAACD,KAAK,CAAC,CAAC,CAAE;MACzB;MACA7C,SAAS,CAAC2C,QAAQ,CAAC,CAAC,CAAE;MACtBb,OAAO,CAACG,GAAG,CAAC,SAAS,EAAEU,QAAQ,CAAC,CAAC,CAAE;IACrC,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEvC,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAwC,QAAA,gBAC7BvD,OAAA;MACEwD,IAAI,EAAC,yEAAyE;MAC9EC,GAAG,EAAC,YAAY;MAChBC,SAAS,EAAC,yEAAyE;MACnFC,WAAW,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACF/D,OAAA,CAACT,MAAM;MAAAqE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/D,OAAA,CAACJ,MAAM;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/D,OAAA,CAACF,WAAW;MACZO,QAAQ,EAAEA,QAAS;MACnBF,OAAO,EAAEA,OAAQ;MACjB6C,OAAO,EAAEA,OAAQ;MACjBzC,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA;IAAU;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxB/D,OAAA,CAACP,OAAO;MACRc,MAAM,EAAEA;IAAO;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACF/D,OAAA,CAACN,OAAO;MAAAkE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACX/D,OAAA,CAACL,OAAO;MAAAiE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACX/D,OAAA,CAACR,MAAM;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC7D,EAAA,CAlHID,GAAG;AAAA+D,EAAA,GAAH/D,GAAG;AAoHT,eAAeA,GAAG;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}