{"ast":null,"code":"var _jsxFileName = \"C:\\\\ljs\\\\project\\\\id\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자\n  const [searchedBlock, setSearchedBlocks] = useState([]);\n  const [nickName, setNickName] = useState(\"\");\n\n  // 메타마스크 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n            if (!deployedNetwork) {\n              console.error(\"네트워크가 배포되지 않았습니다.\");\n              return;\n            }\n            const instance = new web3.eth.Contract(IdProject.abi, deployedNetwork.address);\n            setContract(instance);\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\"MetaMask 연결 중 오류가 발생했습니다. 다시 확인해주세요.\");\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. 설치 후 다시 시도해주세요.\");\n      }\n    };\n    initWeb3();\n  }, []);\n\n  // 블록 정보 가져오기\n  useEffect(() => {\n    if (contract && account) {\n      fetchBlocks(contract, account);\n    }\n  }, [contract, account]);\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n        const fetchedBlockResults = [];\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          console.log(`Block ${i}:`, block);\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString()\n          });\n        }\n\n        // 최신 블록이 맨 위에 오도록 정렬 후 저장\n        const sortedBlocks = fetchedBlockResults.reverse();\n        setBlocks(sortedBlocks);\n\n        // 닉네임이 설정되지 않은 경우에만 업데이트\n        setNickName(prevNickName => {\n          var _sortedBlocks$;\n          return prevNickName || ((_sortedBlocks$ = sortedBlocks[0]) === null || _sortedBlocks$ === void 0 ? void 0 : _sortedBlocks$.nickName) || \"\";\n        });\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 선택된 사용자 상태 업데이트\n  const handleUserSelect = user => {\n    setSelectedUser(user);\n    fetchSearchedBlocks(user.userAddress);\n  };\n  const fetchSearchedBlocks = async account => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n        const fetchedBlockResults = [];\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods.getInfo(account, blockCount[i]).call();\n          console.log(`Block ${i}:`, block);\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString()\n          });\n        }\n        setSearchedBlocks(fetchedBlockResults.reverse()); // 최신순 정렬\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 사용자 선택 취소 (검색 화면으로 돌아가기)\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        margin: 0,\n        padding: 0,\n        marginBottom: \"15px\",\n        marginTop: \"15px\"\n      },\n      children: [\"Welcome, \", nickName, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), !selectedUser ? /*#__PURE__*/_jsxDEV(Search, {\n      contract: contract,\n      onUserSelect: handleUserSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-history\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedUser.nickName, \"\\uB2D8\\uC758 \\uAE30\\uB85D\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToSearch,\n          className: \"back-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        blocks: searchedBlock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), !selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateBlock, {\n        contract: contract,\n        account: account,\n        blocks: blocks,\n        setBlocks: setBlocks,\n        fetchBlocks: fetchBlocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(History, {\n        blocks: blocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBTN, {\n        nickName: nickName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HelpBTN, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ULwT98/ZeORTCzTJEnVuH6iw6RU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","Header","Footer","History","ChatBTN","HelpBTN","Search","IdProject","CreateBlock","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","account","setAccount","contract","setContract","blocks","setBlocks","selectedUser","setSelectedUser","searchedBlock","setSearchedBlocks","nickName","setNickName","initWeb3","window","ethereum","web3","request","method","accounts","eth","getAccounts","length","networkId","net","getId","deployedNetwork","networks","console","error","instance","Contract","abi","address","alert","fetchBlocks","blockCount","methods","getIndexOf","call","log","fetchedBlockResults","i","block","getInfo","push","gameName","serverName","className","remarks","date","Date","Number","toLocaleString","sortedBlocks","reverse","prevNickName","_sortedBlocks$","handleUserSelect","user","fetchSearchedBlocks","userAddress","handleBackToSearch","children","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","margin","padding","marginBottom","marginTop","onUserSelect","onClick","_c","$RefreshReg$"],"sources":["C:/ljs/project/id/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Header from \"./pages/Header\";\nimport Footer from \"./pages/Footer\";\nimport { History } from \"./pages/History\";\nimport { ChatBTN, HelpBTN } from \"./pages/Buttons\";\nimport \"./App.css\";\nimport { Search } from \"./pages/Search\";\nimport IdProject from \"./IdProject.json\";\nimport CreateBlock from \"./pages/CreateBlock\";\n\nconst App = () => {\n  const [account, setAccount] = useState(\"\");\n  const [contract, setContract] = useState(null);\n  const [blocks, setBlocks] = useState([]); // 블록 상태 관리\n  const [selectedUser, setSelectedUser] = useState(null); // 선택된 사용자\n  const [searchedBlock, setSearchedBlocks] = useState([]);\n  const [nickName, setNickName] = useState(\"\");\n\n  // 메타마스크 및 스마트 계약 초기화\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.request({ method: \"eth_requestAccounts\" });\n          const accounts = await web3.eth.getAccounts();\n          if (accounts.length > 0) {\n            const account = accounts[0];\n            setAccount(account);\n            const networkId = await web3.eth.net.getId();\n            const deployedNetwork = IdProject.networks[networkId];\n\n            if (!deployedNetwork) {\n              console.error(\"네트워크가 배포되지 않았습니다.\");\n              return;\n            }\n\n            const instance = new web3.eth.Contract(\n              IdProject.abi,\n              deployedNetwork.address\n            );\n\n            setContract(instance);\n          } else {\n            console.error(\"MetaMask 계정을 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error(\"Web3 초기화 중 오류 발생:\", error);\n          alert(\"MetaMask 연결 중 오류가 발생했습니다. 다시 확인해주세요.\");\n        }\n      } else {\n        console.error(\"Ethereum object not found. Please install MetaMask.\");\n        alert(\"MetaMask가 설치되어 있지 않습니다. 설치 후 다시 시도해주세요.\");\n      }\n    };\n\n    initWeb3();\n  }, []);\n\n  // 블록 정보 가져오기\n  useEffect(() => {\n    if (contract && account) {\n      fetchBlocks(contract, account);\n    }\n  }, [contract, account]);\n\n  const fetchBlocks = async (contract, account) => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n\n        const fetchedBlockResults = [];\n\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods\n            .getInfo(account, blockCount[i])\n            .call();\n          console.log(`Block ${i}:`, block);\n\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString(),\n          });\n        }\n\n        // 최신 블록이 맨 위에 오도록 정렬 후 저장\n        const sortedBlocks = fetchedBlockResults.reverse();\n        setBlocks(sortedBlocks);\n\n        // 닉네임이 설정되지 않은 경우에만 업데이트\n        setNickName((prevNickName) => prevNickName || sortedBlocks[0]?.nickName || \"\");\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 선택된 사용자 상태 업데이트\n  const handleUserSelect = (user) => {\n    setSelectedUser(user);\n    fetchSearchedBlocks(user.userAddress);\n  };\n\n  const fetchSearchedBlocks = async (account) => {\n    try {\n      if (contract && account) {\n        const blockCount = await contract.methods.getIndexOf(account).call();\n        if (blockCount.length === 0n) {\n          console.log(\"No blocks available.\");\n          return;\n        }\n\n        const fetchedBlockResults = [];\n\n        for (let i = 0; i < blockCount.length; i++) {\n          const block = await contract.methods\n            .getInfo(account, blockCount[i])\n            .call();\n          console.log(`Block ${i}:`, block);\n\n          fetchedBlockResults.push({\n            nickName: block[0],\n            gameName: block[1],\n            serverName: block[2],\n            className: block[3],\n            remarks: block[4],\n            date: new Date(Number(block[5]) * 1000).toLocaleString(),\n          });\n        }\n\n        setSearchedBlocks(fetchedBlockResults.reverse()); // 최신순 정렬\n      }\n    } catch (error) {\n      console.error(\"블록 정보 불러오기 중 오류 발생:\", error);\n    }\n  };\n\n  // 사용자 선택 취소 (검색 화면으로 돌아가기)\n  const handleBackToSearch = () => {\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <Header />\n      <h1\n        style={{\n          textAlign: \"center\",\n          margin: 0,\n          padding: 0,\n          marginBottom: \"15px\",\n          marginTop: \"15px\",\n        }}\n      >\n        Welcome, {nickName}!\n      </h1>\n      {!selectedUser ? (\n        <Search contract={contract} onUserSelect={handleUserSelect} />\n      ) : (\n        <div className=\"user-history\">\n          <h2>\n            {selectedUser.nickName}님의 기록{\" \"}\n            <button onClick={handleBackToSearch} className=\"back-button\"></button>\n          </h2>\n          <History blocks={searchedBlock} />\n        </div>\n      )}\n      {!selectedUser && (\n        <>\n          <CreateBlock\n            contract={contract}\n            account={account}\n            blocks={blocks}\n            setBlocks={setBlocks}\n            fetchBlocks={fetchBlocks}\n          />\n          <History blocks={blocks} />\n        </>\n      )}\n      <Footer />\n      <div className=\"button-container\">\n        <ChatBTN nickName={nickName} />\n        <HelpBTN />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}